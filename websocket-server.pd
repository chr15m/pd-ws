#N canvas 632 89 450 411 10;
#X floatatom 117 154 5 0 0 0 - - -;
#X obj 29 98 list trim;
#X obj 29 75 list prepend send;
#N canvas 519 50 999 952 handle-connect 0;
#N canvas 132 59 582 593 websocketresponsekey 0;
#N canvas 174 50 827 973 sha1-processchunk 0;
#X obj 555 489 unpack f f f f;
#N canvas 603 716 387 175 sha1-add 0;
#X obj 21 86 expr (($i1+$i3) + (($i2+$i4) / 65536)) % 65536 \; ($i2
+ $i4) % 65536;
#X obj 300 48 inlet;
#X obj 21 48 inlet;
#X obj 114 48 inlet;
#X obj 207 48 inlet;
#X obj 21 137 outlet;
#X obj 300 136 outlet;
#X text 93 10 pseudo 32 bits add function;
#X connect 0 0 5 0;
#X connect 0 1 6 0;
#X connect 1 0 0 3;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X restore 609 522 pd sha1-add;
#X text 190 447 a left-rotate 5;
#X obj 42 464 expr ((registers[0] << 5) % 65536) ^ (registers[1] >>
11) \; ((registers[1] << 5) % 65536) ^ (registers[0] >> 11);
#X obj 422 463 expr registers[8] \; registers[9 ];
#X obj 521 400 t b b f f;
#N canvas 608 713 387 175 sha1-add 0;
#X obj 21 56 expr (($i1+$i3) + (($i2+$i4) / 65536)) % 65536 \; ($i2
+ $i4) % 65536;
#X obj 300 18 inlet;
#X obj 21 18 inlet;
#X obj 114 18 inlet;
#X obj 207 18 inlet;
#X obj 21 107 outlet;
#X obj 300 106 outlet;
#X connect 0 0 5 0;
#X connect 0 1 6 0;
#X connect 1 0 0 3;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X restore 555 549 pd sha1-add;
#N canvas 603 699 393 175 sha1-add 0;
#X obj 21 56 expr (($i1+$i3) + (($i2+$i4) / 65536)) % 65536 \; ($i2
+ $i4) % 65536;
#X obj 300 18 inlet;
#X obj 21 18 inlet;
#X obj 114 18 inlet;
#X obj 207 18 inlet;
#X obj 21 107 outlet;
#X obj 300 106 outlet;
#X connect 0 0 5 0;
#X connect 0 1 6 0;
#X connect 1 0 0 3;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X restore 42 655 pd sha1-add;
#N canvas 605 700 390 175 sha1-add 0;
#X obj 21 56 expr (($i1+$i3) + (($i2+$i4) / 65536)) % 65536 \; ($i2
+ $i4) % 65536;
#X obj 300 18 inlet;
#X obj 21 18 inlet;
#X obj 114 18 inlet;
#X obj 207 18 inlet;
#X obj 21 107 outlet;
#X obj 300 106 outlet;
#X connect 0 0 5 0;
#X connect 0 1 6 0;
#X connect 1 0 0 3;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X restore 422 594 pd sha1-add;
#X obj 42 886 pack f f f f f f f f f f;
#X msg 42 915 \; registers 0 \$1 \$2 \$3 \$4 \$5 \$6 \$7 \$8 \$9 \$10
;
#X obj 42 689 t f b;
#X obj 78 712 expr registers[0] \; registers[1] \; ((registers[2] >>
2)) ^ ((registers[3] << 14) % 65536) \; ((registers[3] >> 2)) ^ ((registers[2]
<< 14) % 65536) \; registers[4] \; registers[5] \; registers[6] \;
registers[7];
#N canvas 76 50 1359 582 sha1-computefk 0;
#X obj 29 72 moses 20;
#X obj 381 132 moses 40;
#X obj 696 197 moses 60;
#X obj 29 273 expr (registers[2] & registers[4]) ^ ( (~registers[2])
& registers[6]) \; (registers[3] & registers[5]) ^ ( (~registers[3])
& registers[7]);
#X obj 381 342 pack;
#X obj 381 273 expr registers[2] ^ registers[4] ^ registers[6] \; registers[3]
^ registers[5] ^ registers[7];
#X obj 696 340 pack;
#X obj 696 273 expr (registers[2] & registers[4]) ^ (registers[2] &
registers[6]) ^ (registers[4] & registers[6]) \; (registers[3] & registers[5])
^ (registers[3] & registers[7]) ^ (registers[5] & registers[7]);
#X obj 29 342 pack;
#X msg 29 376 \$1 \$2 23170 31129;
#X obj 1036 340 pack;
#X obj 1036 273 expr registers[2] ^ registers[4] ^ registers[6] \;
registers[3] ^ registers[5] ^ registers[7];
#X msg 381 375 \$1 \$2 28377 60321;
#X msg 696 373 \$1 \$2 36635 48348;
#X msg 1036 373 \$1 \$2 51810 49622;
#X obj 29 21 inlet;
#X text 79 20 counter value;
#X text 44 246 0 <= i <= 19 -> (b and c) xor ((not b) and d);
#X text 394 248 20 <= i <= 39 -> b xor c xor d;
#X text 1046 248 60 <= i <= 79 -> b xor c xor d;
#X text 707 249 40 <= i <= 59 (b and c) xor (b and d) xor (c and d)
;
#X text 151 375 k = 0x5A827999;
#X text 505 374 k = 0x6ED9EBA1;
#X text 819 372 k = 0x8F1BBCDC;
#X text 1157 373 k = 0xCA62C1D6;
#X obj 29 536 outlet;
#X text 89 534 output : f and k;
#X connect 0 0 3 0;
#X connect 0 1 1 0;
#X connect 1 0 5 0;
#X connect 1 1 2 0;
#X connect 2 0 7 0;
#X connect 2 1 11 0;
#X connect 3 0 8 0;
#X connect 3 1 8 1;
#X connect 4 0 12 0;
#X connect 5 0 4 0;
#X connect 5 1 4 1;
#X connect 6 0 13 0;
#X connect 7 0 6 0;
#X connect 7 1 6 1;
#X connect 8 0 9 0;
#X connect 9 0 25 0;
#X connect 10 0 14 0;
#X connect 11 0 10 0;
#X connect 11 1 10 1;
#X connect 12 0 25 0;
#X connect 13 0 25 0;
#X connect 14 0 25 0;
#X connect 15 0 0 0;
#X restore 555 463 pd sha1-computefk;
#N canvas 242 50 668 385 sha1-computew 0;
#X obj 27 18 inlet;
#X obj 286 132 expr chunk[($i1*2)-6] ^ chunk[($i1*2)-16] ^ chunk[($i1*2)-28]
^ chunk[($i1*2)-32] \; chunk[($i1*2)-5] ^ chunk[($i1*2)-15] ^ chunk[($i1*2)-27]
^ chunk[($i1*2)-31];
#X obj 258 102 t f f;
#X obj 286 203 expr (($i1 << 1) % 65536) ^ ($i2 >> 15) \; (($i2 <<
1) % 65536) ^ ($i1 >> 15);
#X obj 27 67 moses 16;
#X obj 27 135 expr chunk[($i1*2)] \; chunk[($i1*2)+1];
#X obj 258 272 pack f f f;
#X obj 258 241 * 2;
#X obj 27 350 outlet;
#X obj 259 349 outlet;
#X obj 258 299 s chunk;
#X text 317 101 generate words for 16 <= i <= 79;
#X text 158 134 input word;
#X connect 0 0 4 0;
#X connect 1 0 3 0;
#X connect 1 1 3 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 6 1;
#X connect 3 0 8 0;
#X connect 3 1 6 2;
#X connect 3 1 9 0;
#X connect 4 0 5 0;
#X connect 4 1 2 0;
#X connect 5 0 8 0;
#X connect 5 1 9 0;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X restore 680 462 pd sha1-computew;
#X obj 521 338 until;
#X obj 551 364 + 1;
#X obj 521 364 i;
#X msg 554 315 0;
#X obj 521 289 t b b;
#X msg 521 315 80;
#X obj 275 13 inlet;
#X obj 553 150 until;
#X obj 583 176 + 1;
#X msg 553 127 10;
#X obj 553 176 i;
#X obj 553 255 tabwrite registers;
#X obj 553 202 t f f;
#X obj 553 102 t f b;
#X msg 596 150 0;
#X obj 275 53 t b b b;
#X obj 37 165 i;
#X msg 70 118 0;
#X obj 37 92 t b b;
#X obj 391 278 tabread registers;
#X msg 37 118 5;
#X obj 279 278 tabread registers;
#N canvas 707 678 374 175 sha1-add 0;
#X obj 21 56 expr (($i1+$i3) + (($i2+$i4) / 65536)) % 65536 \; ($i2
+ $i4) % 65536;
#X obj 300 18 inlet;
#X obj 21 18 inlet;
#X obj 114 18 inlet;
#X obj 207 18 inlet;
#X obj 21 107 outlet;
#X obj 300 106 outlet;
#X connect 0 0 5 0;
#X connect 0 1 6 0;
#X connect 1 0 0 3;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X restore 194 312 pd sha1-add;
#X obj 67 165 + 2;
#X obj 173 254 + 1;
#X obj 391 255 + 1;
#X msg 166 385 \$1 \$2 \$3;
#X obj 166 359 pack f f f;
#X obj 166 334 i;
#X obj 37 188 t f f;
#X obj 37 141 until;
#X obj 37 212 t b f f f f f;
#X obj 166 411 s sha1hash;
#X obj 67 278 tabread sha1hash;
#X obj 173 278 tabread sha1hash;
#X obj 553 228 tabread sha1hash;
#X text 593 101 initialize registers for new chunk \; hash[] -> registers[]
;
#X text 79 91 update hash table for this chunck;
#X text 569 289 main loop processing chunk;
#X text 426 712 b = a \; \; c = b rightrotate 2 \; \; d = c \; \; e
= d;
#X text 48 445 a =;
#X text 452 447 + e;
#X text 561 445 + f + k;
#X text 700 444 + word;
#X text 278 312 hash[] += registers[];
#X text 405 28 SHA1 : all 32 bit numbers are treated as 16 bit pairs
\; (see Wikipedia for pseudo-code);
#X connect 0 0 6 0;
#X connect 0 1 6 1;
#X connect 0 2 1 0;
#X connect 0 3 1 1;
#X connect 1 0 6 2;
#X connect 1 1 6 3;
#X connect 3 0 7 0;
#X connect 3 1 7 1;
#X connect 4 0 8 0;
#X connect 4 1 8 1;
#X connect 5 0 3 0;
#X connect 5 1 4 0;
#X connect 5 2 13 0;
#X connect 5 3 14 0;
#X connect 6 0 8 2;
#X connect 6 1 8 3;
#X connect 7 0 11 0;
#X connect 7 1 9 1;
#X connect 8 0 7 2;
#X connect 8 1 7 3;
#X connect 9 0 10 0;
#X connect 11 0 9 0;
#X connect 11 1 12 0;
#X connect 12 0 9 2;
#X connect 12 1 9 3;
#X connect 12 2 9 4;
#X connect 12 3 9 5;
#X connect 12 4 9 6;
#X connect 12 5 9 7;
#X connect 12 6 9 8;
#X connect 12 7 9 9;
#X connect 13 0 0 0;
#X connect 14 0 1 2;
#X connect 14 1 1 3;
#X connect 15 0 17 0;
#X connect 16 0 17 1;
#X connect 17 0 16 0;
#X connect 17 0 5 0;
#X connect 18 0 17 1;
#X connect 19 0 20 0;
#X connect 19 1 18 0;
#X connect 20 0 15 0;
#X connect 21 0 30 0;
#X connect 22 0 25 0;
#X connect 23 0 25 1;
#X connect 24 0 22 0;
#X connect 25 0 23 0;
#X connect 25 0 27 0;
#X connect 27 0 50 0;
#X connect 27 1 26 1;
#X connect 28 0 24 0;
#X connect 28 1 29 0;
#X connect 29 0 25 1;
#X connect 30 0 33 0;
#X connect 30 1 19 0;
#X connect 30 2 28 0;
#X connect 31 0 44 0;
#X connect 32 0 31 1;
#X connect 33 0 35 0;
#X connect 33 1 32 0;
#X connect 34 0 37 3;
#X connect 35 0 45 0;
#X connect 36 0 37 2;
#X connect 37 0 42 1;
#X connect 37 1 42 2;
#X connect 38 0 31 1;
#X connect 39 0 49 0;
#X connect 40 0 34 0;
#X connect 41 0 47 0;
#X connect 42 0 41 0;
#X connect 43 0 42 0;
#X connect 44 0 46 0;
#X connect 44 1 38 0;
#X connect 45 0 31 0;
#X connect 46 0 43 0;
#X connect 46 1 43 1;
#X connect 46 2 48 0;
#X connect 46 3 39 0;
#X connect 46 4 36 0;
#X connect 46 5 40 0;
#X connect 48 0 37 0;
#X connect 49 0 37 1;
#X connect 50 0 26 0;
#X restore 86 376 pd sha1-processchunk;
#N canvas 185 97 444 496 sha1-flushwebsocketkey 0;
#X obj 81 235 t b f;
#X obj 81 210 list split 2;
#X obj 150 235 * 256;
#X obj 108 261 +;
#X obj 108 412 list prepend 0;
#X obj 108 438 s chunk;
#X obj 108 344 t b l;
#X obj 108 287 list prepend;
#X obj 108 314 list split 30;
#X obj 108 388 list append 32768 0;
#X obj 53 19 inlet;
#N canvas 227 128 402 294 sha1-clearchunk 0;
#X obj 54 121 until;
#X obj 84 147 + 1;
#X obj 54 147 i;
#X msg 97 121 0;
#X obj 54 26 inlet;
#X msg 54 98 160;
#X obj 54 174 t b f;
#X obj 54 200 0;
#X obj 54 228 tabwrite chunk;
#X obj 54 73 t b b;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 6 0;
#X connect 3 0 2 1;
#X connect 4 0 9 0;
#X connect 5 0 0 0;
#X connect 6 0 7 0;
#X connect 6 1 8 1;
#X connect 7 0 8 0;
#X connect 9 0 5 0;
#X connect 9 1 3 0;
#X restore 194 184 pd sha1-clearchunk;
#X obj 81 144 t f b;
#X text 196 210 <- convert stream to words (2x16bit);
#X text 197 286 <- get 15 words \; for fixed length (60 bytes) \; websocket
key + magic string;
#X text 233 388 <- append bit 1 to message \; specific fixed position
\; for 60 bytes string \;;
#X obj 180 260 loadbang;
#X obj 81 184 list append;
#X obj 24 90 list append;
#X obj 53 65 list split 1;
#X obj 54 114 t b f;
#X connect 0 0 17 1;
#X connect 0 1 3 0;
#X connect 1 0 0 0;
#X connect 1 2 2 0;
#X connect 1 2 17 1;
#X connect 2 0 3 1;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 6 0 7 1;
#X connect 6 1 9 0;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X connect 8 2 7 1;
#X connect 9 0 4 0;
#X connect 10 0 19 0;
#X connect 12 0 17 0;
#X connect 12 1 11 0;
#X connect 16 0 7 1;
#X connect 16 0 17 1;
#X connect 17 0 1 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 19 1 18 1;
#X connect 20 0 18 0;
#X connect 20 1 12 0;
#X restore 140 255 pd sha1-flushwebsocketkey;
#N canvas 186 95 419 287 sha1-paddingchunk 0;
#N canvas 240 134 413 283 sha1-clearchunk 0;
#X obj 49 120 until;
#X obj 79 146 + 1;
#X obj 49 146 i;
#X msg 92 120 0;
#X obj 49 27 inlet;
#X msg 49 97 160;
#X obj 49 173 t b f;
#X obj 49 199 0;
#X obj 49 227 tabwrite chunk;
#X obj 49 72 t b b;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 6 0;
#X connect 3 0 2 1;
#X connect 4 0 9 0;
#X connect 5 0 0 0;
#X connect 6 0 7 0;
#X connect 6 1 8 1;
#X connect 7 0 8 0;
#X connect 9 0 5 0;
#X connect 9 1 3 0;
#X restore 70 125 pd sha1-clearchunk;
#X msg 43 185 31 480;
#X obj 43 28 inlet;
#X obj 43 72 t b b;
#X obj 43 214 s chunk;
#X text 188 121 one more zero padding chunk \; is needed to put the
64 bits \; final string for sha1 input;
#X text 89 184 <-length of original message is coded here;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 1 0 0;
#X restore 70 417 pd sha1-paddingchunk;
#N canvas 187 96 427 369 flushsha1hash 0;
#X obj 58 172 tabread sha1hash;
#X obj 58 199 expr $i1 % 256 \; $i1 / 256;
#X obj 58 241 list prepend;
#X obj 58 268 list split 20;
#X obj 58 120 until;
#X obj 88 146 + 1;
#X obj 58 146 i;
#X msg 101 120 0;
#X msg 58 97 10;
#X obj 58 72 t b b b;
#X obj 58 24 inlet;
#X obj 58 317 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 0;
#X connect 2 0 3 0;
#X connect 3 0 11 0;
#X connect 3 2 2 1;
#X connect 4 0 6 0;
#X connect 5 0 6 1;
#X connect 6 0 5 0;
#X connect 6 0 0 0;
#X connect 7 0 6 1;
#X connect 8 0 4 0;
#X connect 9 0 8 0;
#X connect 9 1 7 0;
#X connect 9 2 2 1;
#X connect 10 0 9 0;
#X restore 39 469 pd flushsha1hash;
#N canvas 190 87 613 658 base64encoder 0;
#X obj 134 117 list append;
#X obj 157 92 list split 3;
#X obj 157 143 t b l;
#X obj 40 233 list;
#X obj 235 258 list;
#X obj 55 117 list length;
#X obj 40 167 i;
#X obj 337 257 unpack f f f;
#X obj 337 286 expr $i3 % 64 \; (($i2 % 16) * 4) + ($i3 >> 6) \; (($i1
% 4) * 16) + ($i2 >> 4) \; $i1 >> 2;
#X obj 55 142 % 3;
#X obj 279 377 moses 26;
#X obj 324 404 moses 52;
#X obj 279 404 + 65;
#X obj 324 430 + 71;
#X obj 456 456 - 4;
#X obj 369 456 43;
#X obj 398 456 47;
#X obj 40 258 unpack f f;
#X obj 369 430 select 62 63 64;
#X obj 235 286 expr 64 \; 64 \; ($i1 % 4) * 16 \; $i1 >> 2;
#X obj 40 286 expr 64 \; ($i2 % 16) * 4 \; (($i1 % 4) * 16) + ($i2
>> 4) \; $i1 >> 2;
#X obj 427 456 61;
#X obj 369 493 list prepend;
#X obj 369 519 t l l;
#X obj 25 56 t b b l l b;
#X obj 26 575 list;
#X obj 26 619 outlet;
#X obj 25 14 inlet;
#X text 83 13 encodes any list of bytes in base64;
#X text 341 376 A -> Z;
#X text 388 402 a -> z;
#X text 472 430 + / = and 0 -> 9;
#X text 247 92 convert 3 bytes to 4 x 6 bits;
#X text 422 255 4 x 6 bits;
#X text 268 252 2 x 6 bits \; add ==;
#X text 115 250 3 x 6 bits \; add =;
#X text 107 196 remaining bytes (< 3);
#X obj 40 196 select 2 1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 0 1;
#X connect 1 1 3 1;
#X connect 1 1 4 1;
#X connect 2 0 0 0;
#X connect 2 1 7 0;
#X connect 3 0 17 0;
#X connect 4 0 19 0;
#X connect 5 0 9 0;
#X connect 6 0 37 0;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 7 2 8 2;
#X connect 8 0 10 0;
#X connect 8 1 10 0;
#X connect 8 2 10 0;
#X connect 8 3 10 0;
#X connect 9 0 6 1;
#X connect 10 0 12 0;
#X connect 10 1 11 0;
#X connect 11 0 13 0;
#X connect 11 1 18 0;
#X connect 12 0 22 0;
#X connect 13 0 22 0;
#X connect 14 0 22 0;
#X connect 15 0 22 0;
#X connect 16 0 22 0;
#X connect 17 0 20 0;
#X connect 17 1 20 1;
#X connect 18 0 15 0;
#X connect 18 1 16 0;
#X connect 18 2 21 0;
#X connect 18 3 14 0;
#X connect 19 0 10 0;
#X connect 19 1 10 0;
#X connect 19 2 10 0;
#X connect 19 3 10 0;
#X connect 20 0 10 0;
#X connect 20 1 10 0;
#X connect 20 2 10 0;
#X connect 20 3 10 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 25 1;
#X connect 23 1 22 1;
#X connect 24 0 25 0;
#X connect 24 1 6 0;
#X connect 24 2 1 0;
#X connect 24 3 5 0;
#X connect 24 4 22 1;
#X connect 25 0 26 0;
#X connect 27 0 24 0;
#X connect 37 0 3 0;
#X connect 37 1 4 0;
#X restore 39 501 pd base64encoder;
#X msg 139 308 \; sha1hash 0 26437 8961 61389 43913 39098 56574 4146
21622 50130 57840;
#X obj 39 216 t b l;
#X obj 39 254 t b b b b b;
#X obj 39 21 inlet;
#X obj 39 552 outlet;
#X obj 39 152 list append 50 53 56 69 65 70 65 53 45 69 57 49 52 45
52 55 68 65 45 57 53 67 65 45 67 53 65 66 48 68 67 56 53 66 49 49;
#X obj 39 90 list split 24;
#X text 150 130 add websocket magic string;
#X text 222 376 <-- SHA1 MAIN LOOP;
#X text 153 501 <- BASE64 ENCODE;
#X obj 151 75 table chunk 160;
#X obj 151 50 table sha1hash 10;
#X obj 151 23 table registers 10;
#X text 275 22 a (0+1) \, b (2+3) \, c (4+5) \, d (6+7) \, e (8+9)
;
#X text 155 289 initialize variables;
#X connect 3 0 4 0;
#X connect 4 0 9 0;
#X connect 6 0 7 0;
#X connect 6 1 1 0;
#X connect 7 0 3 0;
#X connect 7 1 0 0;
#X connect 7 2 2 0;
#X connect 7 3 0 0;
#X connect 7 4 5 0;
#X connect 8 0 11 0;
#X connect 10 0 6 0;
#X connect 11 0 10 0;
#X restore 104 406 pd websocketresponsekey;
#X obj 104 459 list prepend 83 101 99 45 87 101 98 83 111 99 107 101
116 45 65 99 99 101 112 116 58 32;
#X obj 104 516 list append 13 10;
#X obj 28 41 inlet;
#X obj 166 78 loadbang;
#X obj 104 730 outlet;
#X text 220 515 '<cr><lf>';
#N canvas 139 58 500 743 routelist 0;
#X obj 313 411 list;
#X obj 313 440 list split 1;
#X obj 317 187 list length;
#X obj 176 327 until;
#X obj 176 300 i;
#X obj 59 409 list;
#X obj 59 437 list split 1;
#X obj 176 356 t b b;
#X obj 181 500 ==;
#X obj 181 530 route 0;
#X obj 181 557 t b b;
#X obj 290 152 t l l;
#X obj 111 214 <;
#X obj 111 241 route 1;
#X obj 37 185 list length;
#X obj 336 641 list;
#X obj 63 612 list;
#X obj 149 272 t b b;
#X obj 290 129 list;
#X obj 231 557 t b;
#X obj 61 646 spigot;
#X msg 108 618 1;
#X msg 143 629 0;
#X obj 37 68 t l l b b;
#X obj 61 692 outlet;
#X obj 336 692 outlet;
#X obj 37 20 inlet;
#X obj 311 20 inlet;
#X text 79 668 matching : return rest of line;
#X text 347 664 not found : pass line;
#X text 147 43 compare ascii strings \; (could be better..);
#X connect 0 0 1 0;
#X connect 1 0 8 1;
#X connect 1 1 0 1;
#X connect 2 0 4 1;
#X connect 2 0 12 1;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 8 0;
#X connect 6 1 5 1;
#X connect 6 1 16 1;
#X connect 7 0 5 0;
#X connect 7 1 0 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 9 1 19 0;
#X connect 10 0 15 0;
#X connect 10 0 22 0;
#X connect 10 1 3 1;
#X connect 11 0 0 1;
#X connect 11 1 2 0;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 13 1 17 0;
#X connect 14 0 12 0;
#X connect 15 0 25 0;
#X connect 16 0 20 0;
#X connect 17 0 16 0;
#X connect 17 1 4 0;
#X connect 18 0 11 0;
#X connect 20 0 24 0;
#X connect 21 0 20 1;
#X connect 22 0 20 1;
#X connect 23 0 14 0;
#X connect 23 1 15 1;
#X connect 23 1 5 1;
#X connect 23 2 18 0;
#X connect 23 3 21 0;
#X connect 26 0 23 0;
#X connect 27 0 18 1;
#X restore 97 161 pd routelist;
#X text 148 489 'Sec-WebSocket-Accept: ' + processed key;
#X text 190 652 'HTTP/1.1 101 Web Socket Protocol Handshake' \; 'Upgrade:
websocket' \; 'Connection: Upgrade';
#X text 269 99 intercept "Sec-WebSocket-Key: " line;
#X msg 166 119 83 101 99 45 87 101 98 83 111 99 107 101 116 45 75 101
121 58 32;
#X obj 173 543 loadbang;
#X obj 104 663 list prepend;
#X obj 104 703 list append 13 10;
#X msg 173 569 72 84 84 80 47 49 46 49 32 49 48 49 32 87 101 98 32
83 111 99 107 101 116 32 80 114 111 116 111 99 111 108 32 72 97 110
100 115 104 97 107 101 13 10 85 112 103 114 97 100 101 58 32 119 101
98 115 111 99 107 101 116 13 10 67 111 110 110 101 99 116 105 111 110
58 32 85 112 103 114 97 100 101 13 10;
#X text 251 405 <- PROCESS WEBSOCKET RESPONSE KEY;
#X text 218 702 final'<cr><lf>' (empty line);
#N canvas 438 143 396 392 splitline 0;
#X obj 43 184 route 10 13;
#X obj 106 237 t l l;
#X obj 85 268 list;
#X obj 106 210 list prepend;
#X obj 43 24 inlet;
#X obj 143 348 outlet;
#X obj 86 294 t l b;
#X obj 86 320 route bang;
#X obj 86 348 outlet;
#X msg 196 47 bang;
#X obj 196 25 r \$0/reset;
#X connect 0 0 2 0;
#X connect 0 2 3 0;
#X connect 1 0 2 1;
#X connect 1 1 3 1;
#X connect 2 0 6 0;
#X connect 3 0 1 0;
#X connect 4 0 0 0;
#X connect 6 0 7 0;
#X connect 6 1 3 1;
#X connect 6 1 2 1;
#X connect 7 0 8 0;
#X connect 7 1 5 0;
#X connect 9 0 3 1;
#X connect 10 0 9 0;
#X restore 28 78 pd splitline;
#X obj 28 198 list;
#X obj 28 225 route bang;
#X text 71 41 HTTP requests;
#X text 118 378 WEBSOCKET HANDSHAKE;
#X obj 104 345 list;
#X obj 146 251 list length;
#X obj 104 322 select 1;
#X obj 85 251 t b b l;
#X obj 146 224 r websockets-list;
#X obj 104 276 i;
#X obj 104 299 < 24;
#X text 25 4 original subpatch from Nicolas Lhommet's Websocket-Server-in-a-Patch
;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 13 0;
#X connect 3 0 18 0;
#X connect 4 0 11 0;
#X connect 7 0 19 1;
#X connect 11 0 7 1;
#X connect 12 0 15 0;
#X connect 13 0 14 0;
#X connect 14 0 5 0;
#X connect 15 0 13 1;
#X connect 18 0 19 0;
#X connect 18 1 7 0;
#X connect 19 0 20 0;
#X connect 20 1 26 0;
#X connect 23 0 0 0;
#X connect 24 0 28 1;
#X connect 25 0 23 0;
#X connect 26 0 19 1;
#X connect 26 1 28 0;
#X connect 26 2 23 1;
#X connect 27 0 24 0;
#X connect 28 0 29 0;
#X connect 29 0 25 0;
#X restore 29 228 pd handle-connect;
#N canvas 809 290 1111 873 handle-message 0;
#X obj 56 50 inlet;
#X obj 344 716 outlet;
#X text 159 714 output unmasked messages;
#N canvas 128 50 733 789 unmask-message 0;
#X obj 177 111 i;
#X obj 219 111 + 1;
#X obj 149 287 * 256;
#X obj 134 311 +;
#X obj 93 286 t f b;
#X obj 380 533 mod 4;
#X obj 380 581 route 0 1 2 3;
#X obj 380 557 pack f f;
#X obj 380 630 expr $i1^$i2;
#X obj 462 630 expr $i1^$i2;
#X obj 543 630 expr $i1^$i2;
#X obj 625 630 expr $i1^$i2;
#X obj 291 460 ==;
#X obj 134 416 route 0;
#X obj 134 443 t b b;
#X obj 380 484 unpack f f;
#X obj 291 414 t f a;
#X obj 291 484 select 1;
#X obj 192 79 0;
#X obj 380 742 outlet;
#X obj 90 18 inlet;
#X obj 93 385 - 128;
#X obj 90 79 t b f;
#X obj 72 177 pack f f;
#X obj 219 79 10;
#X obj 291 437 - 13;
#X obj 279 79 8;
#X obj 134 385 +;
#X obj 162 363 0;
#X obj 149 337 expr ($i2 << 24) + ($i1 << 16);
#X obj 72 214 route 0 1 2 3 4 5 6 7 8 9 10 11 12 13;
#X obj 18 260 route 254 255;
#X obj 380 508 - 14;
#X text 383 213 0: message type \; 1: mask present (128) + data length(<126)
\; [or extended length : 254=16bit or 255=64bit] \; 2-5: 32 higher
bits of 64bit length (unsupported) \; 6-7: bits 16 to 32 of 64bit length
\; 8-9: 16bit length (or 16 lower bits of 64bit length) \; 10-13: 32bit
mask \; 14 and more: data;
#X obj 291 512 t b b;
#X obj 246 79 - 4;
#X obj 33 151 moses 0;
#X obj 72 741 outlet;
#X obj 379 103 print;
#X connect 0 0 1 0;
#X connect 0 0 36 0;
#X connect 1 0 0 1;
#X connect 2 0 3 1;
#X connect 3 0 27 0;
#X connect 4 0 21 0;
#X connect 4 1 24 0;
#X connect 5 0 7 0;
#X connect 6 0 8 0;
#X connect 6 1 9 0;
#X connect 6 2 10 0;
#X connect 6 3 11 0;
#X connect 7 0 6 0;
#X connect 8 0 19 0;
#X connect 9 0 19 0;
#X connect 10 0 19 0;
#X connect 11 0 19 0;
#X connect 12 0 17 0;
#X connect 13 0 14 0;
#X connect 13 1 12 1;
#X connect 14 0 37 0;
#X connect 14 1 35 0;
#X connect 15 0 32 0;
#X connect 15 1 7 1;
#X connect 16 0 25 0;
#X connect 16 1 15 0;
#X connect 17 0 34 0;
#X connect 18 0 0 1;
#X connect 20 0 22 0;
#X connect 21 0 13 0;
#X connect 22 0 0 0;
#X connect 22 1 23 1;
#X connect 23 0 30 0;
#X connect 24 0 0 1;
#X connect 25 0 12 0;
#X connect 26 0 0 1;
#X connect 27 0 13 0;
#X connect 28 0 27 1;
#X connect 29 0 27 1;
#X connect 30 0 37 0;
#X connect 30 1 31 0;
#X connect 30 6 29 1;
#X connect 30 7 29 0;
#X connect 30 8 2 0;
#X connect 30 9 3 0;
#X connect 30 10 8 1;
#X connect 30 11 9 1;
#X connect 30 12 10 1;
#X connect 30 13 11 1;
#X connect 30 14 16 0;
#X connect 31 0 26 0;
#X connect 31 0 28 0;
#X connect 31 2 4 0;
#X connect 32 0 5 0;
#X connect 34 0 18 0;
#X connect 34 1 37 0;
#X connect 35 0 0 1;
#X connect 36 1 23 0;
#X restore 56 84 pd unmask-message;
#X obj 56 192 route bang;
#X obj 227 157 0;
#X obj 200 157 1;
#X obj 339 158 0;
#X obj 312 158 1;
#X obj 200 130 t b b;
#X obj 285 130 t b b;
#X obj 155 192 spigot 1;
#X obj 267 192 spigot 0;
#X obj 113 256 route 129 130;
#X obj 188 280 t f b;
#X obj 188 305 route 136 137 138;
#X obj 113 716 outlet;
#X obj 113 218 t f b;
#X msg 113 307 text;
#X msg 150 331 binary;
#X obj 267 231 route bang;
#X obj 324 256 list prepend;
#X obj 155 130 t f;
#X obj 324 280 t l l;
#X obj 303 305 list;
#X obj 345 231 t b;
#X obj 303 413 list prepend;
#X msg 221 331 ping;
#X msg 254 356 pong;
#X msg 188 356 close;
#X obj 56 218 t b b;
#X obj 303 436 list trim;
#X text 173 84 <-- PROCESS MESSAGES AND MASK;
#X obj 113 457 t a;
#X obj 540 538 i;
#X obj 540 515 t b;
#X obj 440 647 print websocket-server;
#X msg 540 561 <PONG> received from socket \$1;
#X obj 303 459 route close ping pong;
#X obj 413 546 i;
#X msg 440 619 <PING> received from socket \$1;
#X obj 344 513 t a b;
#X obj 344 619 list prepend;
#X msg 413 594 send \$1 pong;
#X obj 413 570 t f f;
#X text 391 715 pong response (with ping content);
#X text 25 327 websocket \; message types;
#X text 330 187 dispatch messages byteflow : \; - straight to outlet
for text/binary \; - concat to list for websocket server messages;
#X obj 647 713 outlet;
#X text 694 713 close;
#X text 53 11 original subpatch from Nicolas Lhommet's Websocket-Server-in-a-Patch
;
#X connect 0 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 22 0;
#X connect 4 0 30 0;
#X connect 4 1 17 0;
#X connect 5 0 11 1;
#X connect 6 0 11 1;
#X connect 7 0 12 1;
#X connect 8 0 12 1;
#X connect 9 0 6 0;
#X connect 9 1 7 0;
#X connect 10 0 5 0;
#X connect 10 1 8 0;
#X connect 11 0 33 0;
#X connect 12 0 20 0;
#X connect 13 0 18 0;
#X connect 13 1 19 0;
#X connect 13 2 14 0;
#X connect 14 0 15 0;
#X connect 14 1 10 0;
#X connect 14 1 25 0;
#X connect 14 1 26 1;
#X connect 15 0 29 0;
#X connect 15 1 27 0;
#X connect 15 2 28 0;
#X connect 17 0 13 0;
#X connect 17 1 9 0;
#X connect 18 0 33 0;
#X connect 19 0 33 0;
#X connect 20 0 24 0;
#X connect 20 1 21 0;
#X connect 21 0 23 0;
#X connect 22 0 11 0;
#X connect 22 0 12 0;
#X connect 23 0 24 1;
#X connect 23 1 21 1;
#X connect 24 0 26 0;
#X connect 25 0 21 1;
#X connect 25 0 24 1;
#X connect 26 0 31 0;
#X connect 27 0 26 1;
#X connect 28 0 26 1;
#X connect 29 0 26 1;
#X connect 30 1 11 0;
#X connect 30 1 12 0;
#X connect 31 0 38 0;
#X connect 33 0 16 0;
#X connect 34 0 37 0;
#X connect 35 0 34 0;
#X connect 37 0 36 0;
#X connect 38 0 48 0;
#X connect 38 1 41 0;
#X connect 38 2 35 0;
#X connect 39 0 44 0;
#X connect 40 0 36 0;
#X connect 41 0 42 0;
#X connect 41 1 39 0;
#X connect 42 0 1 0;
#X connect 43 0 42 1;
#X connect 44 0 43 0;
#X connect 44 1 40 0;
#X restore 173 228 pd handle-message;
#N canvas 278 600 450 300 stage 0;
#X obj 8 11 inlet;
#X obj 8 266 outlet;
#X obj 205 265 outlet;
#X obj 213 11 inlet;
#X obj 8 209 spigot 1;
#X obj 205 209 spigot 0;
#X obj 326 12 inlet;
#X obj 213 33 t b b;
#X msg 250 55 1;
#X msg 213 55 0;
#X obj 326 56 t b b;
#X msg 326 78 1;
#X msg 363 78 0;
#X obj 326 34 sel 0;
#N canvas 1010 598 450 376 detect-two-crs 0;
#X obj 9 9 inlet;
#X obj 9 317 outlet;
#X obj 39 66 + 1;
#X obj 147 66 t l;
#X obj 9 110 sel 0;
#X obj 9 34 t b a;
#X obj 9 160 list;
#X obj 9 132 t b b;
#X obj 9 66 1;
#X obj 65 66 list prepend;
#X obj 9 88 mod 4;
#X obj 9 189 unpack f f f f;
#X obj 9 221 == 13;
#X obj 48 221 == 10;
#X obj 89 221 == 13;
#X obj 128 221 == 10;
#X obj 9 243 &&;
#X obj 89 243 &&;
#X obj 9 265 &&;
#X obj 9 287 sel 1;
#X connect 0 0 5 0;
#X connect 2 0 8 1;
#X connect 3 0 9 1;
#X connect 4 0 7 0;
#X connect 5 0 8 0;
#X connect 5 1 9 0;
#X connect 6 0 11 0;
#X connect 7 0 6 0;
#X connect 7 1 9 1;
#X connect 8 0 2 0;
#X connect 8 0 10 0;
#X connect 9 0 3 0;
#X connect 9 0 6 1;
#X connect 10 0 4 0;
#X connect 11 0 12 0;
#X connect 11 1 13 0;
#X connect 11 2 14 0;
#X connect 11 3 15 0;
#X connect 12 0 16 0;
#X connect 13 0 16 1;
#X connect 14 0 17 0;
#X connect 15 0 17 1;
#X connect 16 0 18 0;
#X connect 17 0 18 1;
#X connect 18 0 19 0;
#X connect 19 0 1 0;
#X restore 27 70 pd detect-two-crs;
#X obj 8 40 t l l l;
#X msg 27 92 1;
#X connect 0 0 15 0;
#X connect 3 0 7 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 6 0 13 0;
#X connect 7 0 9 0;
#X connect 7 1 8 0;
#X connect 8 0 5 1;
#X connect 9 0 4 1;
#X connect 10 0 11 0;
#X connect 10 1 12 0;
#X connect 11 0 4 1;
#X connect 12 0 5 1;
#X connect 13 0 10 0;
#X connect 14 0 16 0;
#X connect 15 0 4 0;
#X connect 15 1 14 0;
#X connect 15 2 5 0;
#X connect 16 0 5 1;
#X restore 29 176 pd stage;
#X obj 246 17 r \$0/header-finished;
#X obj 246 39 t a a;
#X obj 29 303 s \$0/header-finished;
#N canvas 841 181 490 809 process-message 0;
#X obj 10 12 inlet;
#X obj 53 263 list;
#X obj 74 214 list prepend;
#X obj 53 143 t b b;
#X obj 74 236 t l l;
#X obj 158 172 t b b b b;
#X obj 159 325 list split 1;
#X obj 53 286 t l l;
#X obj 139 111 sel 32 44 59 10 13 0;
#X obj 159 348 sel 48 49 50 51 52 53 54 55 56 57;
#X obj 53 396 list tosymbol;
#X msg 188 443 0;
#X obj 159 421 t a;
#X msg 159 444 1;
#X obj 53 469 list prepend;
#X obj 53 522 route 0 1;
#X obj 78 581 f;
#X obj 53 492 list trim;
#X obj 78 550 symbol;
#X text 158 301 starts with int = probably a number;
#X text 10 76 msg start;
#X obj 80 58 t b b;
#X obj 135 648 t l;
#X obj 32 670 list;
#X obj 53 648 list prepend;
#X obj 53 625 t a;
#X obj 10 58 t b;
#X obj 32 723 outlet;
#X obj 32 693 list trim;
#X obj 10 35 route text binary bang;
#X obj 139 58 spigot 1;
#X obj 44 58 t b;
#X msg 44 97 0;
#X msg 10 97 1;
#X obj 298 108 spigot;
#X obj 331 63 - 1;
#X obj 331 85 abs;
#X obj 331 27 t a;
#X text 358 56 switch between text and binary messages;
#X connect 0 0 29 0;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 3 0 2 1;
#X connect 3 1 1 0;
#X connect 4 0 1 1;
#X connect 4 1 2 1;
#X connect 5 2 2 1;
#X connect 5 3 1 0;
#X connect 6 0 9 0;
#X connect 7 0 10 0;
#X connect 7 1 6 0;
#X connect 8 0 3 0;
#X connect 8 1 5 0;
#X connect 8 2 5 0;
#X connect 8 3 5 0;
#X connect 8 4 5 0;
#X connect 8 5 5 0;
#X connect 8 6 2 0;
#X connect 9 0 12 0;
#X connect 9 1 12 0;
#X connect 9 2 12 0;
#X connect 9 3 12 0;
#X connect 9 4 12 0;
#X connect 9 5 12 0;
#X connect 9 6 12 0;
#X connect 9 7 12 0;
#X connect 9 8 12 0;
#X connect 9 9 12 0;
#X connect 9 10 11 0;
#X connect 10 0 14 0;
#X connect 11 0 14 1;
#X connect 12 0 13 0;
#X connect 13 0 14 1;
#X connect 14 0 17 0;
#X connect 15 0 25 0;
#X connect 15 1 18 0;
#X connect 16 0 25 0;
#X connect 17 0 15 0;
#X connect 18 0 16 0;
#X connect 21 0 23 0;
#X connect 21 1 5 0;
#X connect 22 0 24 1;
#X connect 23 0 28 0;
#X connect 24 0 22 0;
#X connect 24 0 23 1;
#X connect 25 0 24 0;
#X connect 26 0 33 0;
#X connect 26 0 24 1;
#X connect 28 0 27 0;
#X connect 29 0 26 0;
#X connect 29 1 31 0;
#X connect 29 2 21 0;
#X connect 29 3 30 0;
#X connect 29 3 34 0;
#X connect 30 0 8 0;
#X connect 31 0 32 0;
#X connect 31 0 24 1;
#X connect 32 0 37 0;
#X connect 33 0 37 0;
#X connect 34 0 24 0;
#X connect 35 0 36 0;
#X connect 36 0 34 1;
#X connect 37 0 35 0;
#X connect 37 0 30 1;
#X restore 173 306 pd process-message;
#X obj 222 280 print handle-right;
#X obj 173 329 outlet;
#X obj 29 14 inlet;
#N canvas 1047 105 450 413 prepare-list 0;
#X obj 12 7 inlet;
#X obj 12 382 outlet;
#X obj 33 78 list split 1;
#X obj 118 79 t l;
#X obj 126 267 t l;
#X obj 12 289 list;
#X obj 12 322 list prepend 129;
#X obj 12 30 t b a b b;
#X obj 33 101 t b a;
#X msg 33 124 32;
#X obj 33 218 list fromsymbol;
#N canvas 139 80 496 568 message-length-header 0;
#X obj 35 15 inlet;
#X obj 36 422 list prepend;
#X obj 156 333 list prepend 126;
#X obj 36 139 t l l;
#X obj 105 172 list length;
#X obj 105 200 moses 126;
#X obj 156 266 expr $i1 / 256 \; $i1 % 256;
#X obj 156 305 pack f f;
#X obj 35 65 list split 1;
#X obj 36 113 list;
#X obj 35 90 t b f;
#X obj 36 451 list prepend;
#X obj 36 515 outlet;
#X obj 280 267 expr ($i1 >> 24) % 256 \; ($i1 >> 16) % 256 \; ($i1
>> 8) % 256 \; $i1 % 256 \;;
#X obj 280 333 pack f f f f;
#X obj 280 360 list prepend 127 0 0 0 0;
#X obj 156 240 moses 65536;
#X text 162 222 16bit;
#X text 112 221 8bit;
#X text 278 219 64bit (but pd limit is 20bit);
#X text 174 199 V websocket 'extended payload length' V;
#X connect 0 0 8 0;
#X connect 1 0 11 0;
#X connect 2 0 1 1;
#X connect 3 0 1 0;
#X connect 3 1 4 0;
#X connect 4 0 5 0;
#X connect 5 0 1 1;
#X connect 5 1 16 0;
#X connect 6 0 7 0;
#X connect 6 1 7 1;
#X connect 7 0 2 0;
#X connect 8 0 10 0;
#X connect 8 1 9 1;
#X connect 9 0 3 0;
#X connect 10 0 9 0;
#X connect 10 1 11 1;
#X connect 11 0 12 0;
#X connect 13 0 14 0;
#X connect 13 1 14 1;
#X connect 13 2 14 2;
#X connect 13 3 14 3;
#X connect 14 0 15 0;
#X connect 15 0 1 1;
#X connect 16 0 6 0;
#X connect 16 1 13 0;
#X restore 12 356 pd message-length-header;
#N canvas 953 598 450 300 number-to-symbol 0;
#X obj 11 15 inlet;
#X obj 11 269 outlet;
#X obj 11 45 route float;
#X obj 11 243 t a;
#X obj 11 216 makefilename %g;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 0;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X restore 33 193 pd number-to-symbol;
#X obj 33 267 list append;
#X obj 33 243 list append 32;
#X obj 243 7 inlet;
#X obj 148 322 list prepend 130;
#X text 285 6 binary input;
#X text 54 7 text input;
#X connect 0 0 7 0;
#X connect 2 0 8 0;
#X connect 2 1 3 0;
#X connect 3 0 2 0;
#X connect 4 0 13 1;
#X connect 5 0 6 0;
#X connect 6 0 11 0;
#X connect 7 0 5 0;
#X connect 7 1 2 0;
#X connect 7 2 13 1;
#X connect 7 3 14 1;
#X connect 8 0 9 0;
#X connect 8 1 12 0;
#X connect 9 0 14 1;
#X connect 10 0 14 0;
#X connect 11 0 1 0;
#X connect 12 0 10 0;
#X connect 13 0 4 0;
#X connect 13 0 5 1;
#X connect 14 0 13 0;
#X connect 15 0 16 0;
#X connect 16 0 11 0;
#X restore 29 37 pd prepare-list;
#X obj 29 252 t a b;
#X msg 56 276 1;
#X msg 272 251 0;
#X obj 245 192 outlet;
#X obj 29 126 netreceive -b \$1;
#X text 27 356 based on the work of Nicolas Lhommet's Websocket-Server-in-a-Patch.
;
#X text 27 386 https://sourceforge.net/projects/websocketserverinapatch/
;
#X obj 116 14 inlet;
#X text 65 13 text;
#X text 155 13 binary;
#X connect 0 0 5 2;
#X connect 1 0 18 0;
#X connect 2 0 1 0;
#X connect 3 0 14 0;
#X connect 4 0 9 0;
#X connect 4 1 10 0;
#X connect 4 2 16 0;
#X connect 5 0 3 0;
#X connect 5 1 4 0;
#X connect 6 0 7 0;
#X connect 7 0 2 0;
#X connect 7 1 5 1;
#X connect 9 0 11 0;
#X connect 12 0 13 0;
#X connect 13 0 2 0;
#X connect 14 0 8 0;
#X connect 14 1 15 0;
#X connect 18 0 5 0;
#X connect 21 0 13 1;
